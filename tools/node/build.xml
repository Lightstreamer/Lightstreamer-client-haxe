<project name="Nodejs client library" 
  xmlns:if="ant:if"
  default="package" 
  basedir="../..">

  <property name="tools" location="tools/node"/>
  <property name="build" location="bin/node/build"/>
  <property name="dist" location="bin/node/build/dist/npm"/>
  <property name="obj" location="${build}/obj"/>
  <property name="obj.api.lib" location="${obj}/ls_node_client_api.js"/>
  <property name="obj.wrapper.lib" location="${obj}/ls_node_client_wrapper.js"/>
  <property name="test" location="bin-test/node"/>
  <property name="tools.base.dir" location="tools"/>
  <property file="${tools}/build.properties"/>

  <property name="haxe.orig.lib" location="${obj}/ls_node_client_haxe_orig.js"/>
  <property name="haxe.lib" location="${obj}/ls_node_client_haxe.js"/>
  <property name="rollup.config" location="${tools}/res/rollup.config.mjs"/>

  <property name="package.json.template" location="${tools}/res/package.json"/>
  <property name="package.json" location="${dist}/package.json"/>
  <property name="readme.md.template" location="${tools}/res/doc/README.md"/>
  <property name="readme.md" location="${dist}/README.md"/>
  <property name="types.d.ts.log" location="${dist}/../types.d.ts.log"/>

  <property name="wrapper" location="src/wrapper/node"/>
  <property name="api.inc" location="${wrapper}/api.inc"/>
  <property name="haxe.inc" location="${wrapper}/haxe.inc"/>
  <property name="wrapper.inc" location="${wrapper}/wrapper.inc"/>
  <property name="js.dir" location="src/wrapper/js"/>

  <property name="docs" location="${build}/docs"/>
  <property name="jsdoc.logo" location="${tools}/../js/logo.png"/>
  <property name="jsdoc.template" location="${tools}/../js/templates/braintree"/>
  <property name="jsdoc.search" location="${tools}/../js/templates/jsdoc-search"/>
  <property name="jsdoc.out" location="${build}/docs/api"/>
  <property name="jsdoc.config" location="${build}/docs/jsdoc3.json"/>
  <property name="jsdoc.config.tmpl" location="${tools}/res/doc/jsdoc3.json"/>
  <property name="jsdoc.summary" location="${tools}/res/doc/jsdoc_summary.md"/>
  <property name="jsdoc.src" location="${build}/dist/npm/lightstreamer-node.js"/>

  <description>
  Buildfile for the Nodejs client library
  </description>

  <target name="distribute" description="Publish the library to npmjs">
    <exec executable="npm" dir="${dist}" failonerror="true">
      <arg value="publish"/>
      <arg value="--otp"/>
      <arg value="${OTP}"/>
    </exec>
  </target>

  <target name="push" description="Push the changes to CodeCommit and Github, and create a Github release">
    <exec executable="git" failonerror="true">
      <arg value="add"/>
      <arg value="-A"/>
    </exec>
    <exec executable="git" failonerror="true">
      <arg value="commit"/>
      <arg value="-m"/>
      <arg value="Release Node.js SDK ${version} build ${build.number}"/>
    </exec>
    <exec executable="git" failonerror="true">
      <arg value="push"/>
    </exec>
    <exec executable="git" failonerror="true">
      <arg value="push"/>
      <arg value="github"/>
      <arg value="main"/>
    </exec>
    <exec executable="gh" failonerror="true">
      <arg value="release"/>
      <arg value="create"/>
      <arg value="Node-v${version}"/>
      <arg value="--title"/>
      <arg value="Node.js Client SDK ${version}"/>
      <arg value="--notes"/>
      <arg value="[Changelog](CHANGELOG-Node.js.md)"/>
    </exec>
  </target>

  <target name="docs" description="Build the docs">
    <copy file="${jsdoc.config.tmpl}" tofile="${jsdoc.config}" overwrite="true">
      <filterset>
        <filter token="SEARCH_PLUGIN" value="${jsdoc.search}"/>
        <filter token="VERSION" value="${version}"/>
        <filter token="SUMMARY.MD" value="${jsdoc.summary}"/>
        <filter token="LOGO.IMG" value="${jsdoc.logo}"/>
      </filterset>
    </copy>
    <mkdir dir="${jsdoc.out}"/>
    <exec executable="npx" failonerror="true">
      <arg value="jsdoc"/>
      <arg value="-r"/>
      <arg value="-t"/><arg value="${jsdoc.template}"/>
      <arg value="-d"/><arg value="${jsdoc.out}"/>
      <arg value="-c"/><arg value="${jsdoc.config}"/>
      <arg value="${jsdoc.src}"/>
    </exec>
  </target>

  <target name="package" depends="types.d.ts" description="Build the library">
  </target>

  <target name="types.d.ts" depends="package_libs">
     <exec executable="npx" failonerror="true" output="${types.d.ts.log}">
      <arg value="jsdoc"/>
      <arg value="-t"/>
      <arg value="node_modules/tsd-jsdoc/dist"/>
      <arg value="-d"/>
      <arg value="${dist}"/>
      <arg value="${dist}/lightstreamer-node.js"/>
    </exec>
    <exec executable="node" failonerror="true">
      <arg value="${tools.base.dir}/fix-types-d-ts"/>
      <arg value="${dist}"/>
      <arg value="lightstreamer-client-node"/>
    </exec>
    <echo>Log of types.d.ts is saved in `${types.d.ts.log}`</echo>
  </target>

  <target name="package_libs" depends="package_common,package_haxe">
    <exec executable="npx" failonerror="true">
      <arg value="rollup"/>
      <arg value="--config"/>
      <arg value="${rollup.config}"/>
      <!-- output is saved in ${dist} -->
    </exec>
  </target>

  <target name="package_common">
     <copy file="${package.json.template}" tofile="${package.json}" overwrite="true">
      <filterset>
        <filter token="VERSION" value="${version}"/>
        <filter token="BUILD" value="${build.number}"/>
      </filterset>
    </copy>
    <copy file="${readme.md.template}" tofile="${readme.md}" overwrite="true">
      <filterset>
        <filter token="VERSION" value="${version}"/>
      </filterset>
    </copy>
  </target>

  <target name="package_haxe" depends="preprocess">
    <echo message="Version: ${version} build ${build.number}"/>
    <echo message="CID: ${cid}"/>
    <exec executable="haxe" failonerror="true">
      <arg value="build.node.hxml"/>
      <arg line="-D no-traces"/>
      <arg value="-D"/><arg value="LS_VERSION=${version}"/>
      <arg value="-D"/><arg value="LS_BUILD=${build.number}"/>
      <arg value="-D"/><arg value="LS_CID=${cid}"/>
      <!-- output lib is saved in ${haxe.orig.lib} -->
    </exec>
    <exec executable="haxe" failonerror="true">
      <arg value="--run"/>
      <arg value="tools.Patch"/>
      <arg value="${haxe.orig.lib}"/>
      <!-- output lib is saved in ${haxe.orig.lib} -->
    </exec>
    <exec executable="node" failonerror="true">
      <arg value="${tools.base.dir}/preprocess.js"/>
      <arg value="${haxe.inc}"/>
      <arg value="-b"/><arg value="${obj}"/>
      <arg value="-o"/><arg value="${haxe.lib}"/>
      <arg value="-START_NODE_JSDOC_EXCLUDE"/>
    </exec>
  </target>

  <target name="test" description="Run the tests">
    <exec executable="haxe" failonerror="true">
      <arg value="test.node.hxml"/>
      <arg value="-D" if:set="UTEST_PATTERN"/><arg value="UTEST_PATTERN=${UTEST_PATTERN}" if:set="UTEST_PATTERN"/>
    </exec>
    <exec executable="node" failonerror="true">
      <arg value="${tools.base.dir}/preprocess.js"/>
      <arg value="${tools}/res/test.inc"/>
      <arg value="-o"/><arg value="${test}/lightstreamer.js"/>
      <arg value="-START_NODE_JSDOC_EXCLUDE"/>
    </exec>
    <exec executable="node" failonerror="true">
      <arg value="${test}/lightstreamer.js"/>
    </exec>
  </target>

  <target name="preprocess">
    <touch file="${obj.api.lib}" mkdirs="true"/>
    <exec executable="node" failonerror="true">
      <arg value="${tools.base.dir}/preprocess.js"/>
      <arg value="${api.inc}"/>
      <arg value="-b"/><arg value="${js.dir}"/>
      <arg value="-o"/><arg value="${obj.api.lib}"/>
      <arg value="-START_NODE_JSDOC_EXCLUDE"/>
    </exec>
    <touch file="${obj.wrapper.lib}" mkdirs="true"/>
    <exec executable="node" failonerror="true">
      <arg value="${tools.base.dir}/preprocess.js"/>
      <arg value="${wrapper.inc}"/>
      <arg value="-b"/><arg value="${js.dir}"/>
      <arg value="-o"/><arg value="${obj.wrapper.lib}"/>
      <arg value="-START_NODE_JSDOC_EXCLUDE"/>
    </exec>
  </target>

  <target name="clean" description="Clean the project">
    <delete dir="${build}"/>
    <delete dir="${test}"/>
  </target>

</project>