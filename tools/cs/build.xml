<project name=".Net client library" 
  xmlns:if="ant:if"
  default="package" 
  basedir="../..">

  <description>
  Buildfile for the .Net client library
  </description>

  <property name="build" location="bin/cs"/>
  <property name="test" location="bin-test/cs"/>
  <property name="docs" location="${build}/docs"/>
  <property name="dist" location="${build}/dist"/>

  <property name="tools" location="tools/cs"/>
  <property name="tools.docfx" location="${tools}/docfx_project"/>
  <property name="tools.docfx.json" location="${tools.docfx}/docfx.json"/>
  <property name="tools.solution" location="${tools}/Lightstreamer.DotNetStandard.Client"/>
  <property name="tools.project" location="${tools.solution}/Lightstreamer.DotNetStandard.Client"/>
  <property name="tools.project.readme" location="${tools.project}/docs/readme.md"/>
  <property name="tools.net.project" location="${tools.solution}/Lightstreamer.DotNetStandard.Client.Net"/>
  <property name="test.project" location="${tools}/res/TestAll.csproj"/>
  <property file="${tools}/build.properties"/>

  <property name="readme.template" location="${tools}/res/readme.md"/>
  <property name="nuspec.template" location="${tools}/res/Lightstreamer.DotNetStandard.Client.nuspec"/>
  <property name="nuspec.file" location="${tools.project}/Lightstreamer.DotNetStandard.Client.nuspec"/>

  <target name="test" description="Run the tests">
    <copy file="${test.project}" todir="${test}"/>
    <exec executable="haxe">
      <arg value="test.cs.std.hxml"/>
      <arg value="-D" if:set="UTEST_PATTERN"/><arg value="UTEST_PATTERN=${UTEST_PATTERN}" if:set="UTEST_PATTERN"/>
    </exec>
    <exec executable="haxe">
      <arg value="test.cs.proxy.hxml"/>
      <arg value="-D" if:set="UTEST_PATTERN"/><arg value="UTEST_PATTERN=${UTEST_PATTERN}" if:set="UTEST_PATTERN"/>
    </exec>
    <exec executable="haxe">
      <arg value="test.cs.cert.hxml"/>
      <arg value="-D" if:set="UTEST_PATTERN"/><arg value="UTEST_PATTERN=${UTEST_PATTERN}" if:set="UTEST_PATTERN"/>
    </exec>
  </target>

  <target name="package" depends="build" description="Create the Nuget package">
    <copy file="${nuspec.template}" tofile="${nuspec.file}" overwrite="true">
      <filterset>
        <filter token="VERSION" value="${version}"/>
      </filterset>
    </copy>
    <copy file="${readme.template}" tofile="${tools.project.readme}" overwrite="true">
      <filterset>
        <filter token="VERSION" value="${version}"/>
      </filterset>
    </copy>
    <exec executable="nuget" dir="${tools.project}" failonerror="true">
      <!-- the pack command is not supported by the new versions of nuget.exe unless you set the 'NUGET_ENABLE_LEGACY_CSPROJ_PACK' environment variable -->
      <env key="NUGET_ENABLE_LEGACY_CSPROJ_PACK" value="true"/>
      <arg value="pack"/>
      <arg value="Lightstreamer.DotNetStandard.Client.csproj"/>
      <arg value="-OutputDirectory"/>
      <arg value="${dist}"/>
      <arg value="-IncludeReferencedProjects"/>
    </exec>
    <loadfile property="nuspec.contents" srcFile="${nuspec.file}"/>
    <echo>
WARNING: check that the dependencies listed in the nuspec file at 
`${nuspec.file}` 
are in synch with those declared in the Visual Studio projects at 
`${tools.solution}`
    </echo>
  </target>

  <target name="docs" description="Build the docs">
    <echo message="${version}" file="${tools.docfx}/version.md"/>
    <exec executable="docfx" failonerror="true">
      <arg value="${tools.docfx.json}"/>
      <arg value="-o"/>
      <arg value="${docs}"/>
    </exec>
    <delete dir="${docs}/api"/>
    <move file="${docs}/_site" tofile="${docs}/api"/>
  </target>

  <target name="build" depends="build_haxe" description="Build the library">
    <exec executable="dotnet" dir="${tools.project}" failonerror="true">
      <arg value="build"/>
    </exec>
  </target>

  <target name="build_haxe" depends="build_net">
    <echo message="Version: ${version} build ${build.number}"/>
    <echo message="CID: ${cid}"/>
    <exec executable="haxe" failonerror="true">
      <arg value="build.cs.hxml"/>
      <arg line="-D no-traces"/>
      <arg value="-D"/><arg value="LS_VERSION=${version}"/>
      <arg value="-D"/><arg value="LS_BUILD=${build.number}"/>
      <arg value="-D"/><arg value="LS_CID=${cid}"/>
      <!-- output is saved in ${build}/src -->
    </exec>
  </target>

  <target name="build_net">
    <exec executable="dotnet" dir="${tools.net.project}" failonerror="true">
      <arg value="build"/>
    </exec>
  </target>

  <target name="clean" description="Clean the project">
    <delete dir="${build}"/>
    <delete dir="${test}"/>
    <exec executable="dotnet" dir="${tools.solution}">
      <arg value="clean"/>
    </exec>
  </target>
</project>